# test for integers and floats
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98
>>> add_integer(2)
100
>>> add_integer(100.3, -2)
98
>>> add_integer(-2, -2)
-4
>>> add_integer(10.56, 2.57)
13

"""test for errors"""

>>> add_integer("pop", 2)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(1, "bliss")
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(4, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer

#pass in a list and empty dict
>>> add_integer([1], {})
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(float('inf'), 2)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer(NaN, 3)
Traceback (most recent call last):
...
NameError: name 'NaN' is not defined
>>> add_integer(float('NaN'), 3)
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer
